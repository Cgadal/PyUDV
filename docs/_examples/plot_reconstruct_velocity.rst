
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/plot_reconstruct_velocity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__examples_plot_reconstruct_velocity.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_plot_reconstruct_velocity.py:


==================================
Probes and velocity reconstruction
==================================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from pyudv import reconstruct_velocity
    from pyudv.probes import Probe, sketch_probes


    def U(z):
        u = 5 * (5 - z) ** 2
        v = u / 10
        U = np.array([u, v])
        return U









.. GENERATED FROM PYTHON SOURCE LINES 22-24

Define probes and plot them
===========================

.. GENERATED FROM PYTHON SOURCE LINES 24-47

.. code-block:: default


    # define probes
    r = np.linspace(0, 5, 100)
    alpha1, alpha2 = -120, -70  # deg
    O1, O2 = np.array([1, 8]), np.array([-1, 7])
    probe1_pars = [r, alpha1, [0, O1]]
    probe2_pars = [r, alpha2, [0, O2]]
    #
    probe1 = Probe(*probe1_pars)
    probe2 = Probe(*probe2_pars)

    fig, ax = plt.subplots(1, 1, layout="constrained")
    sketch_probes(
        [probe1, probe2],
        combinations=[[0, 1]],
        probe_colors=[None, None],
        combination_colors=["k"],
        ax=ax,
    )
    ax.set_xlabel("x")
    ax.set_ylabel("y")
    plt.show()




.. image-sg:: /_examples/images/sphx_glr_plot_reconstruct_velocity_001.png
   :alt: plot reconstruct velocity
   :srcset: /_examples/images/sphx_glr_plot_reconstruct_velocity_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-50

Create fake signal
==================

.. GENERATED FROM PYTHON SOURCE LINES 50-55

.. code-block:: default


    u1 = U(probe1.z).T @ probe1.unit_vec
    u2 = U(probe2.z).T @ probe2.unit_vec
    #








.. GENERATED FROM PYTHON SOURCE LINES 56-58

Velocity reconstruction
=======================

.. GENERATED FROM PYTHON SOURCE LINES 58-71

.. code-block:: default


    U_rec, z_interp, X, dx_1, dx_2 = reconstruct_velocity(u1, u2, probe1_pars, probe2_pars)
    U_th = U(z_interp)
    #
    fig, axarr = plt.subplots(1, 3, layout="constrained", sharey=True)
    for ax, u_th, u_rec in zip(axarr, U_th, U_rec):
        ax.plot(u_th, z_interp, ".", label="base")
        ax.plot(u_rec, z_interp, ".", label="reconstructed")
        ax.legend()
    axarr[0].set_xlabel("u")
    axarr[1].set_xlabel("v")
    axarr[0].set_ylabel("z")
    plt.show()



.. image-sg:: /_examples/images/sphx_glr_plot_reconstruct_velocity_002.png
   :alt: plot reconstruct velocity
   :srcset: /_examples/images/sphx_glr_plot_reconstruct_velocity_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.408 seconds)


.. _sphx_glr_download__examples_plot_reconstruct_velocity.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_reconstruct_velocity.py <plot_reconstruct_velocity.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_reconstruct_velocity.ipynb <plot_reconstruct_velocity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
